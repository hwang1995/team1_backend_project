<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 보안을 체크할 필요가 없는 경로 설정 -->
	<security:http pattern="/resources/**" security="none" />


	<!-- 보안 필터 체인(프로세싱) 설정 -->
	<security:http create-session="stateless">
		<!-- Authorization 헤더를 통한 인증 허용(여기서는 사용되지 않음) -->
		<!-- form-login | http-basic 중 하나 지정해야함 -->
		<security:http-basic />

		<!-- CORS 설정 -->
		<security:cors configuration-source-ref="corsSource" />

		<!-- 사이트간 요청 위조 방지 비활성화 -->
		<security:csrf disabled="true" />

		<!-- 서버 세션 비활성화 -->
		<!-- http 태그에서 create-session="stateless" 기술 -->

		<!-- JWT 토큰 인증 필터 추가 -->
		<security:custom-filter
			ref="jwtAuthenticationFilter" before="BASIC_AUTH_FILTER" />

		<!-- 요청 경로 권한 설정 -->

		<security:intercept-url pattern="/api/v1/auth"
			access="permitAll" method="GET" />
		<security:intercept-url pattern="/api/v1/auth"
			access="permitAll" method="POST" />

		<security:intercept-url
			pattern="/api/v1/diagnosis"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/diagnosis"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/diagnosis"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/diagnosis"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/diagnosis/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/diagnosis/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/diagnosis/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/diagnosis/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/hospital"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/hospital" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/hospital" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/hospital" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/hospital/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/hospital/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR')" method="POST" />
		<security:intercept-url
			pattern="/api/v1/hospital/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR')" method="PUT" />
		<security:intercept-url
			pattern="/api/v1/hospital/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR')" method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/member"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/member" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/member" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/member" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/member/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/member/*" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/member/*" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/member/*" access="hasAnyRole('DEVELOP', 'DIRECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/notice"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/notice"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/notice"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/notice"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/notice/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/notice/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/notice/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/notice/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/patient"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/patient"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/patient"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/patient"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/patient/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/patient/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/patient/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/patient/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />
		<security:intercept-url
			pattern="/api/v1/patient/search/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />

		<security:intercept-url
			pattern="/api/v1/reservation"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/reservation"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/reservation"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/reservation"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/reservation/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="GET" />

		<security:intercept-url
			pattern="/api/v1/reservation/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/reservation/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/reservation/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/search"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/search"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/search"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/search"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/search/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/search/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/search/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/search/*"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />

		<security:intercept-url pattern="/api/v1/todo"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url pattern="/api/v1/todo"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />

		<security:intercept-url pattern="/api/v1/todo"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url pattern="/api/v1/todo"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />

		<security:intercept-url
			pattern="/api/v1/todo/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/todo/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/todo/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="PUT" />
		<security:intercept-url
			pattern="/api/v1/todo/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="DELETE" />


		<security:intercept-url pattern="/api/v1/mqtt"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />
		<security:intercept-url
			pattern="/api/v1/mqtt/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="POST" />


		<security:intercept-url pattern="/api/v1/mqtt"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />
		<security:intercept-url
			pattern="/api/v1/mqtt/**"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />


		<security:intercept-url pattern="/image"
			access="hasAnyRole('DEVELOP', 'DIRECTOR', 'DOCTOR', 'NURSE', 'INSPECTOR')"
			method="GET" />

		<security:intercept-url pattern="/**"
			access="denyAll" />
	</security:http>

	<bean id="corsSource"
		class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
		<property name="corsConfigurations">
			<util:map>
				<entry key="/**">
					<bean class="org.springframework.web.cors.CorsConfiguration">
						<property name="allowedOrigins" value="*" />
						<property name="allowedMethods" value="*" />
						<property name="allowedHeaders" value="*" />
						<property name="allowCredentials" value="false" />
					</bean>

				</entry>
			</util:map>
		</property>
	</bean>

	<bean id="jwtAuthenticationFilter"
		class="com.team1.healthcare.security.JwtAuthenticationFilter">
		<constructor-arg name="userDetailsService"
			ref="jdbcUserService" />
	</bean>

	<!-- 사용자 인증 처리를 위한 설정 (DB 테이블 관련) -->
	<security:authentication-manager
		id="daoAuthenticationManager">
		<security:authentication-provider
			ref="daoAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="passwordEncoder" ref="bCryptPasswordEncoder" />
		<property name="userDetailsService" ref="jdbcUserService" />
		<property name="authoritiesMapper"
			ref="roleHierarchyAuthoritiesMapper" />
	</bean>

	<bean id="bCryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<security:jdbc-user-service
		id="jdbcUserService" data-source-ref="dataSource"
		users-by-username-query="select member_email as username, member_pw as password, member_enabled as enabled from members where member_email=?"
		authorities-by-username-query="select member_email as username, member_authority as authority from members where member_email=?" />

	<bean id="roleHierarchyAuthoritiesMapper"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg>
			<bean
				class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
				<property name="hierarchy">
					<value>
						ROLE_DEVELOP > ROLE_DIRECTOR
						ROLE_DIRECTOR > ROLE_DOCTOR
						ROLE_DOCTOR > ROLE_NURSE
						ROLE_NURSE > ROLE_INSPECTOR
					</value>
				</property>
			</bean>
		</constructor-arg>
	</bean>
</beans>
























